{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DataKinds #-}
{-# LANGUAGE GADTs #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}
-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module TestProtoOneof where
import qualified Prelude as Hs
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Wire as HsProtobuf
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.Monad as Hs
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.ByteString as Hs
import qualified Data.String as Hs (fromString)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Generics as Hs
import qualified GHC.Enum as Hs
 
data DummyMsg = DummyMsg{dummyMsgDummy :: Hs.Int32}
              deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
 
instance HsProtobuf.Named DummyMsg where
        nameOf _ = (Hs.fromString "DummyMsg")
 
instance HsProtobuf.Message DummyMsg where
        encodeMessage _ DummyMsg{dummyMsgDummy = dummyMsgDummy}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   dummyMsgDummy)])
        decodeMessage _
          = (Hs.pure DummyMsg) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.Int32)
                (HsProtobuf.Single "dummy")
                []
                Hs.Nothing)]
 
instance HsJSONPB.ToJSONPB DummyMsg where
        toEncodingPB (DummyMsg f1) = (HsJSONPB.fieldsPB ["dummy" .= f1])
 
instance HsJSONPB.FromJSONPB DummyMsg where
        parseJSONPB
          = (HsJSONPB.withObject "DummyMsg"
               (\ obj -> (Hs.pure DummyMsg) <*> obj .: "dummy"))
 
data DummyEnum = DummyEnumDUMMY0
               | DummyEnumDUMMY1
               deriving (Hs.Show, Hs.Bounded, Hs.Eq, Hs.Ord, Hs.Generic)
 
instance HsProtobuf.Named DummyEnum where
        nameOf _ = (Hs.fromString "DummyEnum")
 
instance Hs.Enum DummyEnum where
        toEnum 0 = DummyEnumDUMMY0
        toEnum 1 = DummyEnumDUMMY1
        toEnum i = (Hs.toEnumError "DummyEnum" i (0 :: Hs.Int, 1))
        fromEnum (DummyEnumDUMMY0) = 0
        fromEnum (DummyEnumDUMMY1) = 1
        succ (DummyEnumDUMMY0) = DummyEnumDUMMY1
        succ _ = Hs.succError "DummyEnum"
        pred (DummyEnumDUMMY1) = DummyEnumDUMMY0
        pred _ = Hs.predError "DummyEnum"
 
instance HsJSONPB.ToJSONPB DummyEnum where
        toEncodingPB x _ = HsJSONPB.namedEncoding x
 
instance HsJSONPB.FromJSONPB DummyEnum where
        parseJSONPB (HsJSONPB.String "DUMMY0") = Hs.pure DummyEnumDUMMY0
        parseJSONPB (HsJSONPB.String "DUMMY1") = Hs.pure DummyEnumDUMMY1
        parseJSONPB v = (HsJSONPB.typeMismatch "DummyEnum" v)
 
data Something = Something{somethingValue :: Hs.Int64,
                           somethingAnother :: Hs.Int32,
                           somethingPickOne :: Hs.Maybe SomethingPickOne}
               deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
 
instance HsProtobuf.Named Something where
        nameOf _ = (Hs.fromString "Something")
 
instance HsProtobuf.Message Something where
        encodeMessage _
          Something{somethingValue = somethingValue,
                    somethingAnother = somethingAnother,
                    somethingPickOne = somethingPickOne}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (HsProtobuf.Signed somethingValue)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (HsProtobuf.Signed somethingAnother)),
                case somethingPickOne of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             SomethingPickOneName y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                                     (HsProtobuf.AlwaysEmit y))
                             SomethingPickOneSomeid y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 9)
                                     (HsProtobuf.AlwaysEmit y))
                             SomethingPickOneDummyMsg1 y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 10)
                                     (HsProtobuf.Nested (Hs.Just y)))
                             SomethingPickOneDummyMsg2 y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 11)
                                     (HsProtobuf.Nested (Hs.Just y)))
                             SomethingPickOneDummyEnum y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 12)
                                     (HsProtobuf.AlwaysEmit y))])
        decodeMessage _
          = (Hs.pure Something) <*>
              ((Hs.pure HsProtobuf.signed) <*>
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              ((Hs.pure HsProtobuf.signed) <*>
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 4),
                   (Hs.pure (Hs.Just Hs.. SomethingPickOneName)) <*>
                     HsProtobuf.decodeMessageField),
                  ((HsProtobuf.FieldNumber 9),
                   (Hs.pure (Hs.Just Hs.. SomethingPickOneSomeid)) <*>
                     HsProtobuf.decodeMessageField),
                  ((HsProtobuf.FieldNumber 10),
                   (Hs.pure (Hs.fmap SomethingPickOneDummyMsg1)) <*>
                     ((Hs.pure HsProtobuf.nested) <*> HsProtobuf.decodeMessageField)),
                  ((HsProtobuf.FieldNumber 11),
                   (Hs.pure (Hs.fmap SomethingPickOneDummyMsg2)) <*>
                     ((Hs.pure HsProtobuf.nested) <*> HsProtobuf.decodeMessageField)),
                  ((HsProtobuf.FieldNumber 12),
                   (Hs.pure (Hs.Just Hs.. SomethingPickOneDummyEnum)) <*>
                     HsProtobuf.decodeMessageField)])
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.SInt64)
                (HsProtobuf.Single "value")
                []
                Hs.Nothing),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.SInt32)
                (HsProtobuf.Single "another")
                []
                Hs.Nothing)]
 
instance HsJSONPB.ToJSONPB Something where
        toEncodingPB (Something f1 f2 f4_or_f9_or_f10_or_f11_or_f12)
          = (HsJSONPB.fieldsPB
               ["value" .= f1, "another" .= f2,
                case f4_or_f9_or_f10_or_f11_or_f12 of
                    Hs.Just (SomethingPickOneName f4) -> (HsJSONPB.pair "name" f4)
                    Hs.Just (SomethingPickOneSomeid f9) -> (HsJSONPB.pair "someid" f9)
                    Hs.Just (SomethingPickOneDummyMsg1 f10)
                      -> (HsJSONPB.pair "dummyMsg1" f10)
                    Hs.Just (SomethingPickOneDummyMsg2 f11)
                      -> (HsJSONPB.pair "dummyMsg2" f11)
                    Hs.Just (SomethingPickOneDummyEnum f12)
                      -> (HsJSONPB.pair "dummyEnum" f12)
                    Hs.Nothing -> Hs.mempty])
 
instance HsJSONPB.FromJSONPB Something where
        parseJSONPB
          = (HsJSONPB.withObject "Something"
               (\ obj ->
                  (Hs.pure Something) <*> obj .: "value" <*> obj .: "another" <*>
                    Hs.msum
                      [Hs.Just Hs.. SomethingPickOneName <$>
                         (HsJSONPB.parseField obj "name"),
                       Hs.Just Hs.. SomethingPickOneSomeid <$>
                         (HsJSONPB.parseField obj "someid"),
                       Hs.Just Hs.. SomethingPickOneDummyMsg1 <$>
                         (HsJSONPB.parseField obj "dummyMsg1"),
                       Hs.Just Hs.. SomethingPickOneDummyMsg2 <$>
                         (HsJSONPB.parseField obj "dummyMsg2"),
                       Hs.Just Hs.. SomethingPickOneDummyEnum <$>
                         (HsJSONPB.parseField obj "dummyEnum"),
                       Hs.pure Hs.Nothing]))
 
data SomethingPickOne = SomethingPickOneName Hs.Text
                      | SomethingPickOneSomeid Hs.Int32
                      | SomethingPickOneDummyMsg1 TestProtoOneof.DummyMsg
                      | SomethingPickOneDummyMsg2 TestProtoOneof.DummyMsg
                      | SomethingPickOneDummyEnum (HsProtobuf.Enumerated
                                                     TestProtoOneof.DummyEnum)
                      deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)