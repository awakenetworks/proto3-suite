{-# LANGUAGE DeriveGeneric     #-}
{-# LANGUAGE DeriveAnyClass    #-}
{-# LANGUAGE DataKinds         #-}
{-# LANGUAGE GADTs             #-}
{-# LANGUAGE TypeApplications  #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Unwrap where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Control.Applicative as Hs
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty(..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Unsafe.Coerce as Hs
import qualified Google.Protobuf.Wrappers
 
data Test = Test{testAaa :: Hs.Maybe Hs.Int32,
                 testBbb :: Hs.Maybe Hs.Int64, testCcc :: Hs.Maybe Hs.Word32,
                 testDdd :: Hs.Maybe Hs.Word64, testEee :: Hs.Maybe Hs.Text,
                 testFff :: Hs.Maybe Hs.Bytestring, testGgg :: Hs.Maybe Hs.Bool,
                 testHhh :: Hs.Maybe Hs.Float, testIii :: Hs.Maybe Hs.Double}
          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named Test where
        nameOf _ = (Hs.fromString "Test")
 
instance HsProtobuf.HasDefault Test
 
instance HsProtobuf.Message Test where
        encodeMessage _
          Test{testAaa = testAaa, testBbb = testBbb, testCcc = testCcc,
               testDdd = testDdd, testEee = testEee, testFff = testFff,
               testGgg = testGgg, testHhh = testHhh, testIii = testIii}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Maybe Hs.Int32) @(HsProtobuf.Nested Hs.Int32)
                      testAaa)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Maybe Hs.Int64) @(HsProtobuf.Nested Hs.Int64)
                      testBbb)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Maybe Hs.Word32) @(HsProtobuf.Nested Hs.Word32)
                      testCcc)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Maybe Hs.Word64) @(HsProtobuf.Nested Hs.Word64)
                      testDdd)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.coerce @(Hs.Maybe Hs.Text) @(HsProtobuf.Nested Hs.Text)
                      testEee)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                   (Hs.coerce @(Hs.Maybe Hs.Bytestring)
                      @(HsProtobuf.Nested Hs.Bytestring)
                      testFff)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 7)
                   (Hs.coerce @(Hs.Maybe Hs.Bool) @(HsProtobuf.Nested Hs.Bool)
                      testGgg)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 8)
                   (Hs.coerce @(Hs.Maybe Hs.Float) @(HsProtobuf.Nested Hs.Float)
                      testHhh)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 9)
                   (Hs.coerce @(Hs.Maybe Hs.Double) @(HsProtobuf.Nested Hs.Double)
                      testIii))])
        decodeMessage _
          = (Hs.pure Test) <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Hs.Int32))
                 @(_ (Hs.Maybe Hs.Int32))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Hs.Int64))
                 @(_ (Hs.Maybe Hs.Int64))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Hs.Word32))
                 @(_ (Hs.Maybe Hs.Word32))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Hs.Word64))
                 @(_ (Hs.Maybe Hs.Word64))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Hs.Text)) @(_ (Hs.Maybe Hs.Text))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
              <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Hs.Bytestring))
                 @(_ (Hs.Maybe Hs.Bytestring))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 6)))
              <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Hs.Bool)) @(_ (Hs.Maybe Hs.Bool))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 7)))
              <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Hs.Float))
                 @(_ (Hs.Maybe Hs.Float))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 8)))
              <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Hs.Double))
                 @(_ (Hs.Maybe Hs.Double))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 9)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path ("google" Hs.:| ["protobuf", "Int32Value"])))))
                (HsProtobuf.Single "aaa")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path ("google" Hs.:| ["protobuf", "Int64Value"])))))
                (HsProtobuf.Single "bbb")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path ("google" Hs.:| ["protobuf", "UInt32Value"])))))
                (HsProtobuf.Single "ccc")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path ("google" Hs.:| ["protobuf", "UInt64Value"])))))
                (HsProtobuf.Single "ddd")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path ("google" Hs.:| ["protobuf", "StringValue"])))))
                (HsProtobuf.Single "eee")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 6)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path ("google" Hs.:| ["protobuf", "BytesValue"])))))
                (HsProtobuf.Single "fff")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 7)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path ("google" Hs.:| ["protobuf", "BoolValue"])))))
                (HsProtobuf.Single "ggg")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 8)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path ("google" Hs.:| ["protobuf", "FloatValue"])))))
                (HsProtobuf.Single "hhh")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 9)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path ("google" Hs.:| ["protobuf", "DoubleValue"])))))
                (HsProtobuf.Single "iii")
                []
                "")]
 
instance HsJSONPB.ToJSONPB Test where
        toJSONPB (Test f1 f2 f3 f4 f5 f6 f7 f8 f9)
          = (HsJSONPB.object
               ["aaa" .= f1, "bbb" .= f2, "ccc" .= f3, "ddd" .= f4, "eee" .= f5,
                "fff" .= f6, "ggg" .= f7, "hhh" .= f8, "iii" .= f9])
        toEncodingPB (Test f1 f2 f3 f4 f5 f6 f7 f8 f9)
          = (HsJSONPB.pairs
               ["aaa" .= f1, "bbb" .= f2, "ccc" .= f3, "ddd" .= f4, "eee" .= f5,
                "fff" .= f6, "ggg" .= f7, "hhh" .= f8, "iii" .= f9])
 
instance HsJSONPB.FromJSONPB Test where
        parseJSONPB
          = (HsJSONPB.withObject "Test"
               (\ obj ->
                  (Hs.pure Test) <*> obj .: "aaa" <*> obj .: "bbb" <*> obj .: "ccc"
                    <*> obj .: "ddd"
                    <*> obj .: "eee"
                    <*> obj .: "fff"
                    <*> obj .: "ggg"
                    <*> obj .: "hhh"
                    <*> obj .: "iii"))
 
instance HsJSONPB.ToJSON Test where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON Test where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema Test where
        declareNamedSchema _
          = do let declare_aaa = HsJSONPB.declareSchemaRef
               testAaa <- declare_aaa Proxy.Proxy
               let declare_bbb = HsJSONPB.declareSchemaRef
               testBbb <- declare_bbb Proxy.Proxy
               let declare_ccc = HsJSONPB.declareSchemaRef
               testCcc <- declare_ccc Proxy.Proxy
               let declare_ddd = HsJSONPB.declareSchemaRef
               testDdd <- declare_ddd Proxy.Proxy
               let declare_eee = HsJSONPB.declareSchemaRef
               testEee <- declare_eee Proxy.Proxy
               let declare_fff = HsJSONPB.declareSchemaRef
               testFff <- declare_fff Proxy.Proxy
               let declare_ggg = HsJSONPB.declareSchemaRef
               testGgg <- declare_ggg Proxy.Proxy
               let declare_hhh = HsJSONPB.declareSchemaRef
               testHhh <- declare_hhh Proxy.Proxy
               let declare_iii = HsJSONPB.declareSchemaRef
               testIii <- declare_iii Proxy.Proxy
               let _ = Hs.pure Test <*> HsJSONPB.asProxy declare_aaa <*>
                         HsJSONPB.asProxy declare_bbb
                         <*> HsJSONPB.asProxy declare_ccc
                         <*> HsJSONPB.asProxy declare_ddd
                         <*> HsJSONPB.asProxy declare_eee
                         <*> HsJSONPB.asProxy declare_fff
                         <*> HsJSONPB.asProxy declare_ggg
                         <*> HsJSONPB.asProxy declare_hhh
                         <*> HsJSONPB.asProxy declare_iii
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName = Hs.Just "Test",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("aaa", testAaa), ("bbb", testBbb),
                                                        ("ccc", testCcc), ("ddd", testDdd),
                                                        ("eee", testEee), ("fff", testFff),
                                                        ("ggg", testGgg), ("hhh", testHhh),
                                                        ("iii", testIii)]}})